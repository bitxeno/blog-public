<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IDA Pro on bitxeno's notes</title><link>https://blog.xenori.com/tags/ida-pro/</link><description>Recent content in IDA Pro on bitxeno's notes</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 16 May 2012 16:30:16 +0000</lastBuildDate><atom:link href="https://blog.xenori.com/tags/ida-pro/index.xml" rel="self" type="application/rss+xml"/><item><title>利用IDA Pro反汇编程序</title><link>https://blog.xenori.com/2012/05/disassembly-with-ida-pro/</link><pubDate>Wed, 16 May 2012 16:30:16 +0000</pubDate><guid>https://blog.xenori.com/2012/05/disassembly-with-ida-pro/</guid><description>&lt;p>&lt;a class="link" href="http://www.hex-rays.com/products/ida/index.shtml" target="_blank" rel="noopener"
>IDA Pro&lt;/a>是一款强大的反汇编软件，特有的IDA视图和交叉引用，可以方便理解程序逻辑和快速定位代码片断，以方便修改。&lt;/p>
&lt;p>&lt;img src="http://ww3.sinaimg.cn/large/7ce4a9f6gw1e5q1vme0mij20ly0ihdil.jpg"
loading="lazy"
alt="IDA视图"
>&lt;/p>
&lt;h3 id="示例程序">示例程序&lt;/h3>
&lt;p>下面会通过修改示例程序的输出字符串，来讲解如何使用IDA Pro。&lt;/p>
&lt;pre>&lt;code>#include
main()
{
int n;
scanf (&amp;quot;%d&amp;quot;,&amp;amp;n);
if (n &amp;gt; 0)
printf(&amp;quot;a &amp;gt; 0&amp;quot;); //后面会用IDA Pro把'a'改成'n'
else
printf(&amp;quot;n &amp;lt; 0&amp;quot;);
}
&lt;/code>&lt;/pre>
&lt;p>编译后的程序下载：&lt;a class="link" href="http://bitxeno.me/wp-content/uploads/2012/05/test.zip" target="_blank" rel="noopener"
>demo&lt;/a>&lt;/p>
&lt;h3 id="运行ida-pro">运行IDA Pro&lt;/h3>
&lt;p>运行IDA Pro，并使用PE文件的方式打开示例的test.exe文件。IDA Pro会新建一个工程，并开始反汇编程序。反汇编完成后，在[IDA-View]窗口中，可以看到程序逻辑的树形图，如下：&lt;/p>
&lt;p>&lt;img src="http://ww1.sinaimg.cn/large/7ce4a9f6gw1e5q1xayieqj20jp0iztb6.jpg"
loading="lazy"
alt="树形图"
>
&lt;img src="http://ww1.sinaimg.cn/large/7ce4a9f6gw1e5q1xrz40tj208v08574h.jpg"
loading="lazy"
alt="树形图"
>&lt;/p>
&lt;p>树形图把条件分支清晰地显示出来了，&lt;strong>绿色线&lt;/strong>连着的表示条件为true时执行的逻辑，而&lt;strong>红色线&lt;/strong>表示条件为false时执行的逻辑。&lt;strong>右下角&lt;/strong>有IDA视图的缩略图，在上面点击可以快速定位到视图的指定位置。&lt;/p>
&lt;p>IDA的工具栏有几个按钮对定位代码很重要，如下图所示：&lt;/p>
&lt;p>&lt;img src="http://ww3.sinaimg.cn/large/7ce4a9f6gw1e5q1y4cfa7j203r00tt8i.jpg"
loading="lazy"
alt="定位相关功能按钮"
>&lt;/p>
&lt;p>从左到右分别是：
&lt;strong>Open exports window&lt;/strong>:打开导出窗口
&lt;strong>Open import window&lt;/strong>:打开导入窗口
*&lt;strong>Open names window&lt;/strong>:函数和参数的命名列表
*&lt;strong>Open functions window&lt;/strong>:程序调用的所有函数窗口
*&lt;strong>Open strings window&lt;/strong>: 打开字符串显示窗口，会列出程序中的所有字符串，该窗口有助于你通过程序的运行输出逆向找出对应的代码片断。&lt;/p>
&lt;h3 id="定位代码片断">定位代码片断&lt;/h3>
&lt;p>假设我们现在接到个任务，需修正程序，把输出“a &amp;gt; 0”修正为“n &amp;gt; 0”。示例程序比较简单，直接看IDA视图我们就能找到需修改的代码片断，但实际处理时，可能程序有几m大，通过一个个看IDA视图已没法有效找到相关的执行代码片断，这时怎么办？
使用字符串窗口和IDA强大的交叉引用！
点击工具栏的[Open strings windows]按钮，可以看到如下的程序字符串：&lt;/p>
&lt;p>&lt;img src="http://ww2.sinaimg.cn/large/7ce4a9f6gw1e5q1yut1etj20db03pmxq.jpg"
loading="lazy"
alt="程序字符串"
>&lt;/p>
&lt;p>程序的字符串较少，可以很快地看到我们需要的字符串“a &amp;gt; 0”在数据段&lt;strong>00403003&lt;/strong>位置。假如字符串多到已不能肉眼定位查找，因为字符串窗口是没有查找功能的，这时需要借助其他的文本编辑器，如notepad，editplus等。在字符串窗口内右键，选择菜单[copy]命令，会把字符串窗口的所有内容复制到剪贴板，再粘贴到记事本中查找就可以了。&lt;/p>
&lt;p>&lt;strong>双击&lt;/strong>字符串窗口的该行字符串，会跳转到IDA视图的&lt;strong>00403003位置，如下图所示：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="http://ww4.sinaimg.cn/large/7ce4a9f6gw1e5q1zg56f5j20jx01vdg3.jpg"
loading="lazy"
alt="IDA视图"
>&lt;/p>
&lt;p>该位置的字符串后面会注释有DATA XREF的字样，这是程序中引用到该字符串的代码片断的地址！在该行上右键，选择[Jump to cross reference&amp;hellip;]项，会立即跳转到引用该字符串的代码片断位置！&lt;/p>
&lt;p>&lt;img src="http://ww2.sinaimg.cn/large/7ce4a9f6gw1e5q20cc1okj20eg04hgm8.jpg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="http://ww2.sinaimg.cn/large/7ce4a9f6gw1e5q20sej74j20b302yaa8.jpg"
loading="lazy"
>&lt;/p>
&lt;p>最后定位的代码片断
上图显示的汇编指令即是我们要找的代码片断，这时点击[Hex View-A]窗口，会切换到二进制浏览模式，并高亮了汇编代码的二进制格式指令，如下图所示：&lt;/p>
&lt;p>&lt;img src="http://ww1.sinaimg.cn/large/7ce4a9f6gw1e5q215hg0cj20e60203z5.jpg"
loading="lazy"
>&lt;/p>
&lt;p>已找到需修改的代码片断，剩下的只需把a改成n。&lt;/p>
&lt;h3 id="修改程序文件">修改程序文件&lt;/h3>
&lt;p>在IDA中，可以在[Hex View-A]窗口右键选择[Edit]来修改二进制指令。修改后通过右键选择[Commit Change]可以看到修改后的IDA视图。但需要注意的是，这种方式的修改并不会更新原始程序文件，实际只是修改了IDA的项目文件！IDA中只适合做一些验证性的修改，确保正确后再使用其他工具修改原始程序文件。
在IDA中验证修改正确后，可以使用UltraEdit或Hex Workshop来修改原始程序文件。下面会以UltraEdit为例来说明如何修改。&lt;/p>
&lt;p>&lt;img src="http://ww3.sinaimg.cn/large/7ce4a9f6gw1e5q221zxgej20he084jtg.jpg"
loading="lazy"
>&lt;/p>
&lt;p>用UltraEdit直接打开程序文件，UltraEdit会以16进制模式显示程序文件。&lt;strong>UltraEdit显示的地址和IDA显示的地址是不同的&lt;/strong>，为了找到对应代码片断在UltraEdit中的实际地址，需要使用到UltraEdit的查找功能。在IDA中复制需修改的16进制模式显示的指令，在UltraEdit中打开查找，粘贴并查找该16进制字符串，UltrEdit会很快定位到该指令处，如下图所示：&lt;/p>
&lt;p>&lt;img src="http://ww2.sinaimg.cn/large/7ce4a9f6gw1e5q22llu5nj20et04z0u2.jpg"
loading="lazy"
>&lt;/p>
&lt;p>在IDA中使得右键来复制&lt;/p>
&lt;p>&lt;img src="http://ww4.sinaimg.cn/large/7ce4a9f6gw1e5q233977pj20bp05gaao.jpg"
loading="lazy"
>&lt;/p>
&lt;p>在UltraEdit打开查找功能&lt;/p>
&lt;p>&lt;img src="http://ww4.sinaimg.cn/large/7ce4a9f6gw1e5q23e9of1j20hc02vjsc.jpg"
loading="lazy"
>&lt;/p>
&lt;p>找到了UltraEdit的对应位置&lt;/p>
&lt;p>现在我们要把“a &amp;gt; 0”改成“n &amp;gt; 0”，a对应的ASCII码是61，而n对应的ASCII码是6E，只需把61改成6E就可以了，修改后保存。&lt;/p>
&lt;p>&lt;img src="http://ww3.sinaimg.cn/large/7ce4a9f6gw1e5q23tgcxbj20h800oaa3.jpg"
loading="lazy"
>&lt;/p>
&lt;p>再次运行，可以看到结果已改变！&lt;/p>
&lt;p>&lt;img src="http://ww1.sinaimg.cn/large/7ce4a9f6gw1e5q244d9g5j203y026dfn.jpg"
loading="lazy"
>&lt;/p>
&lt;p>示例只是修改了字符串，只需更改数据段内容就可以了，不用更改指令。假如需要更改指令，需要参考&lt;a class="link" href="http://courses.engr.illinois.edu/ece390/resources/opcodes.html#Main" target="_blank" rel="noopener"
>http://courses.engr.illinois.edu/ece390/resources/opcodes.html#Main&lt;/a> 8086指令操作表写出对应指今的16进制形式，再修改。&lt;/p>
&lt;h3 id="参考资料">参考资料：&lt;/h3>
&lt;p>&lt;a class="link" href="http://blog.csdn.net/liquanhai/article/details/5479141" target="_blank" rel="noopener"
>http://blog.csdn.net/liquanhai/article/details/5479141&lt;/a>
&lt;a class="link" href="http://www.youtube.com/watch?v=Gl2S0YPRb9s" target="_blank" rel="noopener"
>http://www.youtube.com/watch?v=Gl2S0YPRb9s&lt;/a>
&lt;a class="link" href="http://www.woodmann.com/crackz/Tutorials/Flores1.htm" target="_blank" rel="noopener"
>http://www.woodmann.com/crackz/Tutorials/Flores1.htm&lt;/a>
&lt;a class="link" href="http://courses.engr.illinois.edu/ece390/resources/opcodes.html#Main" target="_blank" rel="noopener"
>http://courses.engr.illinois.edu/ece390/resources/opcodes.html#Main&lt;/a>
&lt;a class="link" href="http://faydoc.tripod.com/cpu/conventions.htm" target="_blank" rel="noopener"
>http://faydoc.tripod.com/cpu/conventions.htm&lt;/a>&lt;/p></description></item></channel></rss>
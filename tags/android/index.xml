<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on bitxeno's notes</title><link>https://blog.xenori.com/tags/android/</link><description>Recent content in Android on bitxeno's notes</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 15 May 2023 15:27:10 +0800</lastBuildDate><atom:link href="https://blog.xenori.com/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>通过 WSA 抓取 android 的 https 网络请求包</title><link>https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/</link><pubDate>Mon, 15 May 2023 15:27:10 +0800</pubDate><guid>https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/</guid><description>&lt;img src="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/cover.jpeg" alt="Featured image of post 通过 WSA 抓取 android 的 https 网络请求包" />&lt;p>android 9 以上版本，app 不再信任用户安装的证书，只能通过 root 手机把证书移动到 system 分区才能实现抓包。一般日常使用手机为了安全是不可能 root 的，这里通过 Windows 的 WSA 来实现抓包。&lt;/p>
&lt;h2 id="准备环境">准备环境&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>到 &lt;a class="link" href="https://github.com/MustardChef/WSABuilds/releases" target="_blank" rel="noopener"
>WSABuilds&lt;/a> 下载安装已 root 带 &lt;strong>magisk&lt;/strong> 的 WSA 镜像（假如之前已安装过 WSA，需要先到系统应用列表中，把旧的卸载）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装后，开始菜单中搜索 &lt;code>android&lt;/code>，找到 WSA 设置应用并打开，选择 &lt;code>开发人员&lt;/code>，并打开&lt;code>开发人员模式&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/1.png"
width="1084"
height="718"
srcset="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/1_hub311dd2faff923cd2dc66f0ae9a4776d_92901_480x0_resize_box_3.png 480w, https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/1_hub311dd2faff923cd2dc66f0ae9a4776d_92901_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="362px"
>&lt;/p>
&lt;ol start="3">
&lt;li>
&lt;p>安装&lt;a class="link" href="https://www.microsoft.com/store/productId/9P2JFQ43FPPG" target="_blank" rel="noopener"
>APK 安装程序&lt;/a>，实现双击安装 apk 和自动安装 adb 命令工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装&lt;a class="link" href="ms-windows-store://pdp/?productid=9PPSP2MKVTGT" >WSA 工具箱&lt;/a>，用于上传文件到 WSA&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载&lt;a class="link" href="https://github.com/topjohnwu/Magisk/releases" target="_blank" rel="noopener"
>Magisk app&lt;/a>，并安装&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="安装-charles-证书">安装 charles 证书&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>打开 &lt;strong>charles&lt;/strong>，选择菜单 &lt;code>Help -&amp;gt; SSL Proxying -&amp;gt; Save Charles Root Certificate&lt;/code>，并选择把证书保存为 &lt;code>.cer&lt;/code> 格式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>打开&lt;strong>WSA 工具箱&lt;/strong>，使用&lt;code>文件传输&lt;/code>功能把刚刚保存的证书上传到 wsa 的&lt;code>Download&lt;/code>目录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>点击&lt;strong>WSA 工具箱&lt;/strong>首页的&lt;code>Android设置&lt;/code>，选择&lt;code>安全-&amp;gt;更多安全设置-&amp;gt;加密与凭据-&amp;gt;安装证书&lt;/code>菜单，选择并安装&lt;code>Download&lt;/code>目录的&lt;code>charles&lt;/code>证书&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/2.png"
width="1390"
height="864"
srcset="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/2_huc11281a385f0323f7fb22346342b05c5_278663_480x0_resize_box_3.png 480w, https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/2_huc11281a385f0323f7fb22346342b05c5_278663_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="386px"
>&lt;/p>
&lt;ol start="4">
&lt;li>证书安装成功后，正常在&lt;code>加密与凭据-&amp;gt;信任的凭据-&amp;gt;用户&lt;/code>项中能看到已安装的证书&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/3.png"
width="582"
height="688"
srcset="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/3_hu6752eb6c708844501a8d4a854f8e7790_62810_480x0_resize_box_3.png 480w, https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/3_hu6752eb6c708844501a8d4a854f8e7790_62810_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="84"
data-flex-basis="203px"
>&lt;/p>
&lt;h2 id="把用户区证书移动到-system-分区">把用户区证书移动到 system 分区&lt;/h2>
&lt;ol>
&lt;li>下载 &lt;strong>Magisk&lt;/strong> 的&lt;a class="link" href="https://github.com/NVISOsecurity/MagiskTrustUserCerts/releases" target="_blank" rel="noopener"
>MagiskTrustUserCerts&lt;/a>模块压缩包，并通过&lt;strong>WSA 工具箱&lt;/strong>上传到&lt;code>Download&lt;/code>目录&lt;/li>
&lt;/ol>
&lt;ol start="2">
&lt;li>打开 &lt;strong>Magisk&lt;/strong> app，点击&lt;code>模块 -&amp;gt; 从本地安装&lt;/code>，选择刚刚上传的&lt;code>Download&lt;/code>目录下的&lt;code>AlwaysTrustUserCerts&lt;/code>压缩包&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/4.png"
width="544"
height="718"
srcset="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/4_hu62ae5ce2897a65b7a4027a8ee750a16e_45040_480x0_resize_box_3.png 480w, https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/4_hu62ae5ce2897a65b7a4027a8ee750a16e_45040_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="75"
data-flex-basis="181px"
>&lt;/p>
&lt;ol start="3">
&lt;li>
&lt;p>安装成功后，正常会提示你重启 wsa，没的话，在命令行中执行&lt;code>adb reboot&lt;/code>手工重启下&lt;/p>
&lt;/li>
&lt;li>
&lt;p>重启后正常能在&lt;code>加密与凭据-&amp;gt;信任的凭据-&amp;gt;系统&lt;/code>中，看到&lt;code>charles&lt;/code>证书&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/5.png"
width="544"
height="696"
srcset="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/5_hub5c871cd5d01a8af30fa5218ac6cbbd2_106297_480x0_resize_box_3.png 480w, https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/5_hub5c871cd5d01a8af30fa5218ac6cbbd2_106297_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="78"
data-flex-basis="187px"
>&lt;/p>
&lt;h2 id="配置代理抓包">配置代理抓包&lt;/h2>
&lt;ol>
&lt;li>打开 &lt;strong>charles&lt;/strong>，选择菜单&lt;code>Proxy -&amp;gt; SSL Proxying Settings...&lt;/code>，勾选 &lt;code>Enable SSL Proxying&lt;/code>，并添加新的 location，&lt;code>Host&lt;/code>填&lt;code>*&lt;/code>，&lt;code>Port&lt;/code>填&lt;code>443&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/6.png"
width="1620"
height="808"
srcset="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/6_hudd5d61aff7f94b1e6ad1eb93fdacf997_349536_480x0_resize_box_3.png 480w, https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/6_hudd5d61aff7f94b1e6ad1eb93fdacf997_349536_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="200"
data-flex-basis="481px"
>&lt;/p>
&lt;ol start="2">
&lt;li>打开命令行，执行下面的命令设置 WSA 代理：&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>adb connect 127.0.0.1:58526
adb shell settings put global http_proxy 192.168.x.x:8888
&lt;/code>&lt;/pre>&lt;p>其中&lt;code>192.168.x.x&lt;/code>需改为&lt;strong>charles&lt;/strong>所在的 ip 地址&lt;/p>
&lt;ol start="3">
&lt;li>下载安装需要抓包的 app，访问就能在&lt;strong>charles&lt;/strong>看到 https 流量了：）&lt;/li>
&lt;/ol>
&lt;h2 id="删除代理">删除代理&lt;/h2>
&lt;p>去掉代理需执行下面命令：&lt;/p>
&lt;pre tabindex="0">&lt;code>adb shell settings delete global http_proxy
adb shell settings delete global global_http_proxy_host
adb shell settings delete global global_http_proxy_port
&lt;/code>&lt;/pre></description></item><item><title>常用adb命令</title><link>https://blog.xenori.com/2020/09/adb-commands/</link><pubDate>Fri, 11 Sep 2020 11:27:10 +0800</pubDate><guid>https://blog.xenori.com/2020/09/adb-commands/</guid><description>&lt;img src="https://blog.xenori.com/2020/09/adb-commands/cover.png" alt="Featured image of post 常用adb命令" />&lt;h2 id="1-查看连接设备">1. 查看连接设备&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl"> adb devcies
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-当有多个连接设备时指定执行命令的设备">2. 当有多个连接设备时，指定执行命令的设备&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">adb -s &amp;lt;deviceid&amp;gt; &amp;lt;commands&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">如
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adb -s 1e25fe71 shell pm list package
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="3-查看手机中已安装的所有apk文件">3. 查看手机中已安装的所有apk文件&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">adb shell pm list package
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-导出指定的-apk-包">4. 导出指定的 apk 包&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">adb shell pm path &amp;lt;com.package.name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adb pull &amp;lt;/system/priv-app/com.package.name/package_name.apk&amp;gt; ~/download/savepath
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-卸载任意包括系统应用">5. 卸载任意（包括系统）应用&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">adb shell pm uninstall -k --user &lt;span class="m">0&lt;/span> &amp;lt;com.package.name&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-查看-app-的错误日志">6. 查看 app 的错误日志&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">adb logcat -v &lt;span class="nb">time&lt;/span> &lt;span class="p">|&lt;/span> grep AndroidRuntime
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="7-清空-app-日志">7. 清空 app 日志&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">adb logcat -c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[更新]使用httpcanary在android 9以上版本抓取https网络请求包</title><link>https://blog.xenori.com/2020/07/how-capture-https-network-packet/</link><pubDate>Wed, 01 Jul 2020 11:27:10 +0800</pubDate><guid>https://blog.xenori.com/2020/07/how-capture-https-network-packet/</guid><description>&lt;img src="https://blog.xenori.com/2020/07/how-capture-https-network-packet/cover.png" alt="Featured image of post [更新]使用httpcanary在android 9以上版本抓取https网络请求包" />&lt;p>在 android 9 以上版本，很多 app 都使用&lt;a class="link" href="https://github.com/moxie0/AndroidPinning" target="_blank" rel="noopener"
>certificate pinning&lt;/a>技术来防止 https 中间人攻击，当 app 检测到证书不正确时，会自动断开网络请求，导致抓取不到 https 网络请求包。&lt;/p>
&lt;p>要顺利抓到 https 请求包，需要借助VMOS来避开certificate pinning检测。&lt;/p>
&lt;h2 id="1安装vmos">1、安装VMOS&lt;/h2>
&lt;p>在网盘中下载&lt;code>VMOS&lt;/code>，安装完后，打开VMOS，点击右上方的&lt;code>+&lt;/code>按钮添加虚拟机，选择最下方的&lt;code>安卓7.1极客版&lt;/code>，下载并安装完成。
&lt;img src="https://blog.xenori.com/2020/07/how-capture-https-network-packet/1.jpg"
width="1080"
height="2340"
srcset="https://blog.xenori.com/2020/07/how-capture-https-network-packet/1_hue87aad7deec839ffe0e011d351530d61_609274_480x0_resize_q75_box.jpg 480w, https://blog.xenori.com/2020/07/how-capture-https-network-packet/1_hue87aad7deec839ffe0e011d351530d61_609274_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="46"
data-flex-basis="110px"
>&lt;/p>
&lt;p>回到首页，点击启动虚拟机，进入虚拟机
&lt;img src="https://blog.xenori.com/2020/07/how-capture-https-network-packet/2.jpg"
width="1080"
height="2340"
srcset="https://blog.xenori.com/2020/07/how-capture-https-network-packet/2_hu736f23926ef0ac4ad33f71e9374fb3e8_349102_480x0_resize_q75_box.jpg 480w, https://blog.xenori.com/2020/07/how-capture-https-network-packet/2_hu736f23926ef0ac4ad33f71e9374fb3e8_349102_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="46"
data-flex-basis="110px"
>&lt;/p>
&lt;p>点击下方的&lt;code>常用工具&lt;/code>-&amp;gt;&lt;code>应用&lt;/code>，找到需抓包的软件，点击后导入安装
&lt;img src="https://blog.xenori.com/2020/07/how-capture-https-network-packet/3.jpg"
width="1440"
height="3120"
srcset="https://blog.xenori.com/2020/07/how-capture-https-network-packet/3_hu489ee71d1210f341130b295703923855_556682_480x0_resize_q75_box.jpg 480w, https://blog.xenori.com/2020/07/how-capture-https-network-packet/3_hu489ee71d1210f341130b295703923855_556682_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="46"
data-flex-basis="110px"
>&lt;/p>
&lt;p>VMOS下载地址：&lt;a class="link" href="https://pan.baidu.com/s/1UBNon-dT37G3NuFMcO_szw" target="_blank" rel="noopener"
>https://pan.baidu.com/s/1UBNon-dT37G3NuFMcO_szw&lt;/a> 提取码: wis3&lt;/p>
&lt;h2 id="2安装抓包软件httpcanary">2、安装抓包软件httpcanary&lt;/h2>
&lt;p>自行下载安装：&lt;/p>
&lt;p>蓝奏：&lt;a class="link" href="https://www.lanzous.com/i6hw4ti" target="_blank" rel="noopener"
>https://www.lanzous.com/i6hw4ti&lt;/a>&lt;/p>
&lt;p>百度：&lt;a class="link" href="https://pan.baidu.com/s/11fx67kcqQOwxCLdItAXIxA" target="_blank" rel="noopener"
>https://pan.baidu.com/s/11fx67kcqQOwxCLdItAXIxA&lt;/a> 提取码: ccbd&lt;/p>
&lt;h2 id="3抓取-app-的-https-请求">3、抓取 app 的 https 请求&lt;/h2>
&lt;p>先运行&lt;code>httpcanary&lt;/code>，再在&lt;code>VMOS&lt;/code>中访问需抓包的 app，就能看到所有 https 请求了，在&lt;code>VMOS&lt;/code>中运行的 app，是不会检测certificate pinning的&lt;/p>
&lt;p>&lt;img src="https://blog.xenori.com/2020/07/how-capture-https-network-packet/4.jpg"
width="1080"
height="2340"
srcset="https://blog.xenori.com/2020/07/how-capture-https-network-packet/4_hu3131e9057829df9b315e2c9944db091d_461027_480x0_resize_q75_box.jpg 480w, https://blog.xenori.com/2020/07/how-capture-https-network-packet/4_hu3131e9057829df9b315e2c9944db091d_461027_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="46"
data-flex-basis="110px"
>&lt;/p></description></item><item><title>使用scala+scaloid+IntelliJ IDEA 12开发android应用</title><link>https://blog.xenori.com/2013/06/develop-android-with-intellij-idea-12-and-scaloid/</link><pubDate>Sun, 30 Jun 2013 15:41:00 +0800</pubDate><guid>https://blog.xenori.com/2013/06/develop-android-with-intellij-idea-12-and-scaloid/</guid><description>&lt;h3 id="软件环境">软件环境&lt;/h3>
&lt;p>继续下面的示例前，需要保证安装了下面的软件：&lt;/p>
&lt;ul>
&lt;li>JDK 1.6&lt;/li>
&lt;li>Android SDK&lt;/li>
&lt;li>IntelliJ IDEA 12&lt;/li>
&lt;li>Scala 2.10.2&lt;/li>
&lt;li>Maven 3&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>IntelliJ IDEA 12正常也可以换为Android Studio，不过因为Android Studio是基于IntelliJ IDEA 13 EAP开发的，当前scala plugin还不支持13 EAP，所以还是建议使用IntelliJ IDEA 12，等scala plugin支持最新版后，再换为Android Studio进行开发。&lt;/p>
&lt;/blockquote>
&lt;h3 id="示例项目">示例项目&lt;/h3>
&lt;p>&lt;a class="link" href="https://github.com/pocorall/hello-scaloid-maven" target="_blank" rel="noopener"
>hello-scaloid-maven&lt;/a>是一个完全使用maven编译的示例项目,借助&lt;a class="link" href="http://code.google.com/p/maven-android-plugin/" target="_blank" rel="noopener"
>android maven plugin&lt;/a>插件可以把代码编译为android的apk文件。&lt;/p>
&lt;p>1、下载hello scaloid maven项目到本地
{% codeblock lang:ruby %}
git clone &lt;a class="link" href="https://github.com/pocorall/hello-scaloid-maven.git" target="_blank" rel="noopener"
>https://github.com/pocorall/hello-scaloid-maven.git&lt;/a> hello-scaloid-maven
{% endcodeblock %}&lt;/p>
&lt;p>2、打开POM.xml文件，在&lt;!-- raw HTML omitted -->中加上Android SDK的本地路径
{% codeblock lang:xml %}
&lt;!-- raw HTML omitted -->
&amp;lt;scala.version&amp;gt;2.10.2&amp;lt;/scala.version&amp;gt;
&amp;lt;android.sdk.path&amp;gt;/Applications/android sdk/&amp;lt;/android.sdk.path&amp;gt;
&lt;!-- raw HTML omitted -->
{% endcodeblock %}&lt;/p>
&lt;p>3、执行maven命令下载依赖软件
{% codeblock lang:ruby %}
mvn clean package
{% endcodeblock %}&lt;/p>
&lt;p>4、当提示build success后，用IntelliJ IDEA的“File-&amp;gt;Open Project”打开POM.xml文件。&lt;strong>这里不建议直接使用mvn idea:idea命令生成的IntelliJ项目文件，因为IntelliJ一直在更新，而mvn生成的项目文件可能格式比较旧了。&lt;/strong>&lt;/p>
&lt;p>5、因为android不包括scala类库，所以编译时需要把scala和scaloid类库也编译到apk中，但一个apk是有方法数量限制的，当不使用Proguard进行裁减优化时，使用IntelliJ IDEA编译项目经常会提示错误：
{% codeblock lang:ruby %}
Android Dex: [hello-scaloid-maven] trouble writing output: Too many methods: 112662; max is 65536. By package:
Android Dex: [hello-scaloid-maven] 2 android.annotation
Android Dex: [hello-scaloid-maven] 32 android.gesture
Android Dex: [hello-scaloid-maven] 48101 org.scaloid.common
&amp;hellip;
{% endcodeblock %}&lt;/p>
&lt;p>6、IntelliJ IDEA默认不打开Proguard，下面我们修改配置打开Proguard。打开“File-&amp;gt;Prject Structure-&amp;gt;Facets-&amp;gt;android-&amp;gt;compiler”，勾选上&lt;strong>Enable ProGuard&lt;/strong>项。并把&lt;strong>Config file&lt;/strong>指向项目根目录的&lt;strong>proguard.cfg&lt;/strong>文件。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>注意：MAC下android sdk目录假如有空格的话，编译时会提示错误：&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;/blockquote>
&lt;p>Unable to access jarfile /Applications/Android
&lt;!-- raw HTML omitted -->&lt;/p>
&lt;blockquote>
&lt;p>这时需要改下Proguard脚本。打开“$(android sdk path)/tools/proguard/bin/proguard.sh”文件，把“$PROGUARD_HOME/lib/proguard.jar”路径用双引号括起来。详细可参考：&lt;a class="link" href="http://fiahfy.blogspot.com/2013/06/unable-to-access-jarfile.html" target="_blank" rel="noopener"
>http://fiahfy.blogspot.com/2013/06/unable-to-access-jarfile.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>7、设置好Proguard后，再使用IntelliJ IDEA编译应该就能成功了。Have fun！！&lt;/p>
&lt;blockquote>
&lt;p>Tip：假如你觉得android模拟器太慢，可以参考这篇文章做优化，速度提高10倍！！&lt;a class="link" href="https://www.virag.si/2012/10/speeding-up-android-emulator/" target="_blank" rel="noopener"
>https://www.virag.si/2012/10/speeding-up-android-emulator/&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>增加Android模拟器的"Internal Storage"容量</title><link>https://blog.xenori.com/2012/04/android-internal-storage-space/</link><pubDate>Thu, 12 Apr 2012 16:06:07 +0000</pubDate><guid>https://blog.xenori.com/2012/04/android-internal-storage-space/</guid><description>&lt;p>android模拟器默认的内部存储空间只有几十m，随便安装几个app就满了，google了下，发现AVD管理器是没有增加内部存储空间的设置的，要增加需要使用命令行来启动模拟器，命令如下：&lt;/p>
&lt;pre>&lt;code>emulator -partition-size &amp;lt;size&amp;gt; -avd &amp;lt;virtual device name&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>可以把命令保存到批处理bat文件中，以方便以后直接启动。&lt;/p>
&lt;p>&lt;strong>使用命令行启动模拟器是不能使用snapshot功能的，创建的avd之前有启动的话，需要先关闭。&lt;/strong>
&lt;img src="http://ww2.sinaimg.cn/large/7ce4a9f6gw1e5q1sdhdhnj20as05w3yp.jpg"
loading="lazy"
alt="android avd"
>&lt;/p>
&lt;p>参考资料：
&lt;a class="link" href="https://groups.google.com/forum/?fromgroups#!topic/android-developers/wFO2HOcFiV4" target="_blank" rel="noopener"
>https://groups.google.com/forum/?fromgroups#!topic/android-developers/wFO2HOcFiV4&lt;/a>
&lt;a class="link" href="http://developer.android.com/guide/developing/tools/emulator.html#startup-options" target="_blank" rel="noopener"
>http://developer.android.com/guide/developing/tools/emulator.html#startup-options&lt;/a>&lt;/p></description></item><item><title>利用Eclipse+Scala搭建android开发环境</title><link>https://blog.xenori.com/2012/01/use-eclipse-scala-develop-android/</link><pubDate>Sat, 21 Jan 2012 07:06:00 +0000</pubDate><guid>https://blog.xenori.com/2012/01/use-eclipse-scala-develop-android/</guid><description>&lt;p>&lt;strong>1、安装JAVA SDK&lt;/strong>&lt;/p>
&lt;p>到官网（&lt;a class="link" href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener"
>http://www.oracle.com/technetwork/java/javase/downloads/index.html&lt;/a> ）下载最新的javase sdk，推荐安装1.6版。安装完成后，在windows环境变量中添加[JAVA_HOME]，并把路径指向java sdk的安装根目录。&lt;/p>
&lt;p>&lt;img src="http://images.cnblogs.com/cnblogs_com/vento/scala-android-1.jpg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>2、安装Scala&lt;/strong>&lt;/p>
&lt;p>从scala官网（&lt;a class="link" href="http://www.scala-lang.org/downloads" target="_blank" rel="noopener"
>http://www.scala-lang.org/downloads&lt;/a> ）下载windows版的压缩包，推荐2.8.1 final版，直接解压到相应目录中，假设为c:\scala-2.8.1.final\，再添加下面两个环境变量：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>新增环境变量SCALA_HOME，并设为c:\scala-2.8.1.final&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在已有环境变量Path中，追加值c:\scala-2.8.1.final\bin&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>通过win-&amp;gt;run-cmd打开命令行，输入scala，能输出版本信息证明已安装成功&lt;/p>
&lt;p>&lt;strong>3、安装Eclipse&lt;/strong>&lt;/p>
&lt;p>到Eclipse官网（&lt;a class="link" href="http://www.eclipse.org/downloads/" target="_blank" rel="noopener"
>http://www.eclipse.org/downloads/&lt;/a>）下载，直接解压就能使用，推荐下载Eclipse Classic/Eclipse For Java。&lt;/p>
&lt;p>&lt;strong>4、安装Android SDK&lt;/strong>&lt;/p>
&lt;p>到android开发社区(&lt;a class="link" href="http://developer.android.com/sdk/index.html" target="_blank" rel="noopener"
>http://developer.android.com/sdk/index.html&lt;/a>)下载安装。安装后进入&lt;strong>开始 &amp;gt; 所有程序 &amp;gt; Android SDK &amp;gt; SDK Manager&lt;/strong>程序，软件会提示一些可安装的更新，大家可以根据需要选择安装，建议安装下面图中所示的：&lt;/p>
&lt;p>&lt;img src="http://images.cnblogs.com/cnblogs_com/vento/QQ%E4%BA%94%E7%AC%94%E6%88%AA%E5%9B%BE%E6%9C%AA%E5%91%BD%E5%90%8D.png"
loading="lazy"
>&lt;/p>
&lt;p>之后是漫长的等待&amp;hellip;&lt;/p>
&lt;p>&lt;strong>装ADT Plugin for Eclipse&lt;/strong>
等待android sdk安装好后，打开Eclipse，进入菜单&lt;strong>Help&lt;/strong> &amp;gt; &lt;strong>Install New Software&amp;hellip;&lt;/strong>.，点击**Add，**添加链接&lt;/p>
&lt;pre>&lt;code>https://dl-ssl.google.com/android/eclipse/
&lt;/code>&lt;/pre>
&lt;p>勾选所有项目，然后点击Next安装。&lt;/p>
&lt;p>&lt;img src="http://images.cnblogs.com/cnblogs_com/vento/scala-android-2.jpg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="http://images.cnblogs.com/cnblogs_com/vento/scala-android-3.jpg"
loading="lazy"
>&lt;/p>
&lt;p>安装完成并重启Eclipse后，进入菜单&lt;strong>Window &amp;gt; Preferences &amp;gt; Android&lt;/strong>，点击&lt;strong>Browser&lt;/strong>，把路径指向android sdk的安装目录，然后点击&lt;strong>Apply&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="http://images.cnblogs.com/cnblogs_com/vento/scala-android-6.jpg"
loading="lazy"
>
&lt;strong>6、安装Scala IDE Plugin&lt;/strong>
打开&lt;strong>Eclipse&lt;/strong>，进入菜单&lt;strong>Help&lt;/strong> &amp;gt; &lt;strong>Install New Software&amp;hellip;&lt;/strong>.，点击**Add，**添加链接&lt;/p>
&lt;pre>&lt;code>http://download.scala-ide.org/releases-28/2.0.0-beta
&lt;/code>&lt;/pre>
&lt;p>勾选安装下面两项：&lt;/p>
&lt;p>&lt;strong>JDT weaving For scala&lt;/strong>&lt;/p>
&lt;p>**Scala IDE for Eclipse **
&lt;img src="http://images.cnblogs.com/cnblogs_com/vento/scala-android-4.jpg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="http://images.cnblogs.com/cnblogs_com/vento/scala-android-5.jpg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>7、安装Treesaker **
打开&lt;/strong>Eclipse**，进入菜单&lt;strong>Help&lt;/strong> &amp;gt; &lt;strong>Install New Software&amp;hellip;&lt;/strong>.，点击**Add，**添加链接&lt;/p>
&lt;pre>&lt;code>http://treeshaker.googlecode.com/svn/trunk/update_site/
&lt;/code>&lt;/pre>
&lt;p>勾选treeshaker,点击Next安装。&lt;/p>
&lt;p>&lt;img src="http://images.cnblogs.com/cnblogs_com/vento/scala-android-7.jpg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="http://images.cnblogs.com/cnblogs_com/vento/scala-android-8.jpg"
loading="lazy"
>&lt;/p>
&lt;p>treeshaker是一个开源的辅助插件，详细可以访问项目地址：&lt;a class="link" href="http://code.google.com/p/treeshaker/" target="_blank" rel="noopener"
>http://code.google.com/p/treeshaker/&lt;/a>&lt;/p>
&lt;p>&lt;strong>8、简单的helloworld&lt;/strong>&lt;/p>
&lt;p>Eclipse中打开&lt;strong>File &amp;gt; New &amp;gt; Project &amp;gt; Android Project&lt;/strong>创建一个新的android工程项目：&lt;/p>
&lt;p>&lt;img src="http://images.cnblogs.com/cnblogs_com/vento/scala-android-9.jpg"
loading="lazy"
>&lt;/p>
&lt;p>按下面的步骤把java的项目转为scala的项目：&lt;/p>
&lt;p>1、把src文件夹重命名为_src（右键src &amp;gt; Refactor &amp;gt; Rename)
2、右键HelloWorld项目 &amp;gt; Configure &amp;gt; Add Scala Nature
3、右键HelloWorld项目 &amp;gt; Add/Remove Treeshaker
4、打开菜单Project &amp;gt; Properties &amp;gt; Builders，确保builder的顺序和如下一样：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Android Resource Manager&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Android Pre Compiler&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Scala Builder&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Treeshaker&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Android Package Builder&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>5、打开res\layout\main.xml，把下面的内容替换&lt;!-- raw HTML omitted -->中的内容：&lt;/p>
&lt;pre>&lt;code>&amp;lt;TextView
android:layout_width=&amp;quot;fill_parent&amp;quot;
android:layout_height=&amp;quot;wrap_content&amp;quot;
android:text=&amp;quot;@string/hello&amp;quot;
android:id=&amp;quot;@+id/text&amp;quot;
/&amp;gt;
&amp;lt;Button
android:id=&amp;quot;@+id/button&amp;quot;
android:layout_width=&amp;quot;wrap_content&amp;quot;
android:layout_height=&amp;quot;wrap_content&amp;quot;
android:text=&amp;quot;Click me&amp;quot;
/&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>5、删除_src下的源文件HelloWorldActivity.java 6、创建新的scala代码文件，右键包com.test，选择New &amp;gt; Other &amp;gt; Scala Class &lt;img src="http://images.cnblogs.com/cnblogs_com/vento/scala-android-10.jpg"
loading="lazy"
>Name设为HelloWorldActivty，Superclass设为android.app.Activity 7、修改HelloWorldActivity.scala文件： 增加导入：&lt;/p>
&lt;pre>&lt;code>import android.os.Bundle
import android.view.View
import android.widget.TextView
import android.widget.Button
import R._
&lt;/code>&lt;/pre>
&lt;p>HelloWorldAcitvity类中增加代码：&lt;/p>
&lt;pre>&lt;code>override def onCreate(savedInstanceState: Bundle) {
super.onCreate(savedInstanceState)
setContentView(R.layout.main)
val textView = findViewById(R.id.text).asInstanceOf[TextView]
val button = findViewById(R.id.button).asInstanceOf[Button]
button.setOnClickListener((v: View) =&amp;gt; textView.setText(&amp;quot;Hello Scala&amp;quot;))
}
implicit def func2OnClickListener(func : (View) =&amp;gt; Unit) : View.OnClickListener = {
return new View.OnClickListener() {
override def onClick(v: View) = func(v)
}
}
&lt;/code>&lt;/pre>
&lt;p>8、通过菜单Run &amp;gt; Run，应该能正常编译并在android模拟器中运行了&lt;/p>
&lt;p>扩展阅读：&lt;/p>
&lt;p>&lt;a class="link" href="http://code.google.com/p/treeshaker/wiki/CreateNewScalaProject" target="_blank" rel="noopener"
>CreateNewScalaProject&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://www.slideshare.net/papamitra/scalaandroid" target="_blank" rel="noopener"
>ScalaでAndroidアプリ開発 &lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://www.nevercertain.com/2011/02/18/scala-android-intellij-win-part-3.html" target="_blank" rel="noopener"
>Building Android Apps with Scala - IntelliJ &lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://lamp.epfl.ch/~michelou/android/" target="_blank" rel="noopener"
>Exploring Android With Scala&lt;/a>&lt;/p></description></item></channel></rss>
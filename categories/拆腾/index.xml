<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>拆腾 on bitxeno's notes</title><link>https://blog.xenori.com/categories/%E6%8B%86%E8%85%BE/</link><description>Recent content in 拆腾 on bitxeno's notes</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 11 Aug 2021 07:58:11 +0800</lastBuildDate><atom:link href="https://blog.xenori.com/categories/%E6%8B%86%E8%85%BE/index.xml" rel="self" type="application/rss+xml"/><item><title>openwrt管理后台使用caddy代替uhttpd</title><link>https://blog.xenori.com/2021/08/openwrt-caddy-replace-uhttpd/</link><pubDate>Wed, 11 Aug 2021 07:58:11 +0800</pubDate><guid>https://blog.xenori.com/2021/08/openwrt-caddy-replace-uhttpd/</guid><description>&lt;img src="https://blog.xenori.com/2021/08/openwrt-caddy-replace-uhttpd/cover.jpeg" alt="Featured image of post openwrt管理后台使用caddy代替uhttpd" />&lt;p>openwrt管理后台默认是使用uhttpd提供服务的。一段时间体验下来发现uhttpd有时会没响应，查不到具体原因，只能重启才会恢复正常。为了稳定性和强大的反向代理功能，决定在软路由上使用caddy代替uhttpd。&lt;/p>
&lt;h2 id="暂停uhttpd服务">暂停uhttpd服务&lt;/h2>
&lt;p>uhttpd服务占用了80端口，需要先暂停。使用ssh登录openwrt，执行下面命令暂停uhttpd服务：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">/etc/init.d/uhttpd stop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/etc/init.d/uhttpd disable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="下载caddy">下载caddy&lt;/h2>
&lt;p>访问&lt;a class="link" href="https://caddyserver.com/download" target="_blank" rel="noopener"
>caddy官网&lt;/a>下载最新版本的caddy，intel cpu需要下载&lt;code>Linux amd64&lt;/code>版本，额外功能模块选上&lt;code>aksdb/caddy-cgi/v2&lt;/code>。
&lt;img src="https://blog.xenori.com/2021/08/openwrt-caddy-replace-uhttpd/1.jpg"
width="2732"
height="648"
srcset="https://blog.xenori.com/2021/08/openwrt-caddy-replace-uhttpd/1_hu3cc7554004a4f82bf46186159a47e918_161268_480x0_resize_q75_box.jpg 480w, https://blog.xenori.com/2021/08/openwrt-caddy-replace-uhttpd/1_hu3cc7554004a4f82bf46186159a47e918_161268_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="421"
data-flex-basis="1011px"
>&lt;/p>
&lt;p>下载后放到&lt;code>/usr/bin&lt;/code>目录下，并重命名为&lt;code>caddy&lt;/code>，并给予执行权限：&lt;/p>
&lt;pre tabindex="0">&lt;code>wget &amp;#34;https://caddyserver.com/api/download\?os\=linux\&amp;amp;arch\=amd64\&amp;amp;p\=github.com%2Faksdb%2Fcaddy-cgi%2Fv2\&amp;amp;idempotency\=32032912354333&amp;#34; -o /usr/bin/caddy
chmod +x /usr/bin/caddy
&lt;/code>&lt;/pre>&lt;h2 id="配置caddy">配置caddy&lt;/h2>
&lt;p>增加下面的配置，并放到&lt;code>/etc/caddy/Caddyfile&lt;/code>文件中：&lt;/p>
&lt;pre tabindex="0">&lt;code>{
order cgi before respond
}
:80 {
@notcgi {
not path /cgi-bin/*
not path /
}
redir / /cgi-bin/luci
file_server @notcgi {
root /www
}
cgi /cgi-bin/luci* /www/cgi-bin/luci {
script_name /cgi-bin/luci
# 下面这句很重要，要不然部分服务控制台会工作不正常
unbuffered_output
}
}
&lt;/code>&lt;/pre>&lt;h2 id="增加启动脚本">增加启动脚本&lt;/h2>
&lt;p>增加自启动脚本，并保存到&lt;code>/etc/init.d/caddy&lt;/code>中：&lt;/p>
&lt;pre tabindex="0">&lt;code>#!/bin/sh /etc/rc.common
START=99
SERVICE_USE_PID=1
SERVICE_WRITE_PID=1
SERVICE_DAEMONIZE=1
start() {
service_start /usr/bin/caddy run --config /etc/caddy/Caddyfile
}
stop() {
service_stop /usr/bin/caddy
}
&lt;/code>&lt;/pre>&lt;p>给予执行权限：&lt;/p>
&lt;pre tabindex="0">&lt;code>chmod +x /etc/init.d/caddy
&lt;/code>&lt;/pre>&lt;h2 id="运行">运行&lt;/h2>
&lt;p>执行下面脚本运行caddy服务，并加入到自启动中：&lt;/p>
&lt;pre tabindex="0">&lt;code>/etc/init.d/caddy enable
/etc/init.d/caddy start
&lt;/code>&lt;/pre>&lt;p>成功启动后，就可以正常访问后台了：）&lt;/p></description></item></channel></rss>